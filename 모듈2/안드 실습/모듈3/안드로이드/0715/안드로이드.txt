안드로이드 스튜디오는 오픈JDK를 알아서 설치해줌
android virtual device : 안드로이드 단말기가 없어도 개발할 수 있도록 해주는 디바이스
sdk 설치 위치(SDK Folder) : C:\Users\i\AppData\Local\Android\Sdk -> 리눅스에서는 홈디렉터리에 설치됨
구글은 안드로이드 앱을 구분하기 위해 도메인 네임(패키지)을 사용
자바에서 패키지를 쓰는 이유: 서로 다른 심볼의 충돌을 회피하기 위해서
안드로이드도 마찬가지의 이유로 패키지 사용
ABI: 바이너리 이미지(x86, x86_64)
안드로이드의 화면하나가 액티비티에 매칭되어있음
안드로이드는 화면이 뜰 때, 가장 먼저 onCreate메서드가 호출됨
model : SQL같은것
view : xml
controller : activity

패키지 자동 import : alt + enter
실행: shift + F10

LinearLayout, TextView, Button등등의 태그들은 전부 매핑되어있는 클래스로 변환됨

View(TextView, Button...) : 위젯(화면상에 출력하는 것)
Layout : 위젯을 화면에 어떻게 붙일 것인가를 정의하는 클래스(여러가지가 있음)
LinearLayout : 자신이 포함하고 있는 자식들을 선형적으로 나열함(수직(vertical) or 수평(horizontal))
보통 수직을 많이 사용함

LinearLayout에 view를 추가하면 계속 옆으로 붙여짐(디폴트가 수평으로 붙여지는 것이므로)
따라서 잘려나갈 수도 있음
그래서 보통 LinearLayout에서는 수직(vertical)을 많이 사용함
즉 이 속성값을 직접써주어야함 : android:orientation="vertical"

View의 크기(폭, 높이)는 어떻게 결정?
사용자가 절대값으로 설정해도 되지만 그러면 기기마다 해상도가 다르므로 다르게 보여질 수 있음
"wrap_content" : 알아서 크기를 맞춰줌(뒤에 배경색을 넣어보면 크기 확인 가능)

그런데 만약 한줄을 다 차지하고 싶다면?
안드로이드는 자신이 직접 크기를 결정하지 않고 부모의 크기에 의존적으로 결정하게 하는 방법이 있음
"match_parent" : 부모의 크기와 같게 하겠다는 의미
부모가 "LinearLayout"이고 "vertical"속성이라면 자식이 "match_parent"일 경우 한줄을 가득채우게됨

일반적으로
폭은 "match_parent"
높이는 "wrap_content"
를 많이 사용함

앱이 구동되는 도중에 화면의 디자인을 바꾸고 싶다면?
그러기 위해서는 controller에서 view에 접근하여 제어해야함
id: controller가 view에 접근하기 위해 부여하는 식별가능한 값
id 설정하는법: @+id/"원하는 아이디 명"
"+id"의 의미: R이라는 클래스에 id라는 이너클래스가 생성되고, 이너클래스안에 아이디가 상수값으로 설정됨

Button은 TextView를 상속함
따라서 공통의 속성을 가지고 있음


< Event Driven Program >
리스너는 인터페이스로 제공함으로서 반드시 구현해야함을 보장
이벤트 등록하는 순서를 텍스트로 정리해보자(익명객체, 람다 2가지 경우)
1. 우선 findViewById메서드를 통해서 이벤트를 등록할 View객체(Button, TextView)를 얻어냄
2. setOnTouchListener와 같은 이벤트 등록 메서드를 통해 이벤트를 등록함
이벤트 등록법: setOnTouchListener와 같은 메서드에 인자로 리스너객체를 전달함 (일반적으로 익명객체를 많이 넣음)
3. 해당 리스너객체에 실제 이벤트 발생 시 역할을 수행할 메서드가 등록되어있음

이벤트처리의 열에 아홉은 버튼을 클릭하면 발생하는 경우
따라서 버튼이라는 객체만큼은 xml상에서 콜백메서드를 바로 등록할 수 있음

이벤트 처리 메서드의 인자에 View객체변수가 들어오는 이유는 이벤트를 실행하는 객체를 판별하기 위해서임

라디오 처리는 라디오 객체 각각에 이벤트를 걸어주지 말고 라디오그룹객체에 이벤트를 걸어줘라
각각에 걸어주면 라디오 각각을 누를때마다 이벤트가 발생해서 오버헤드가 발생한다.
그러나 라디오그룹객체에 이벤트를 걸어주면 라디오 각각을 딱 한번만 누를때 이벤트가 발생하고 그 이후에 누르면 이벤트가 
발생하지 않는다.


