해킹 -> 소프트웨어를 분석하는 것
크랙킹 -> 남의 시스템을 무단으로 침입하는 것

서버소켓만들고 포트에 바인딩 , 클라이언트가 자기 소켓을 포트에 연결 =>그래야 연결
서버는 소프트웨어적이다. 하나의 하드웨어에 어떤 서버를 구동함에 따라 어떤 서버인지 나뉜다. ex)웹서버,디비서버


세미콜론없이 수행되는 것은 sql문이 아니다
""은 없고 문자열도 ''을 쓴다

mysql -uroot -p [-h127.0.0.1]
SHOW DATABASES;
show tables in mysql;
use mysql

확장자 frm이라는 것은 form이라는 것으로 테이블구조를 저장하고 있는 파일이다
MYI는 인덱스정보를 가지고 있는 파일
MYD는 실제 테이블이 저장되어 있는 파일
ibdata1에 데이터가 꽉차면 ibdata2를 만든다

SHOW TABLES LIKE 'user';  //테이블명이 user인 것을 출력
SHOW TABLES LIKE 'us%'; //us로 시작하는 모든 테이블 출력
SHOW TABLES LIKE 'us_'; //us로 시작하며 한문자가 더 붙는 즉 3문자인 테이블 출력
SHOW TABLES LIKE 'us__'; //us로 시작하며 두문자가 더 붙는 즉 4문자인 테이블 출력
SHOW TABLES LIKE '%user'; //user로 끝나는 모든 테이블 출력
SHOW TABLES LIKE '_user'; //user로 끝나는 테이블중 앞에 1문자가 붙는 테이블 출력

DESC user; //DESCRIBE user를 줄인말 , EXPLAIN 테이블명도 똑같다
SELECT * FROM user; //user에 있는 모든 컬럼을 보여줘
SELECT host,user,password FROM user // user에 있는 host,user,password 컬럼만 보여줘
CREATE USER 아이디 IDENTIFIED BY '비밀번호'; // 계정을 추가한다
GRANT all privileges ON *.* TO gyetol WITH GRANT OPTION;//gyetol계정에게 GRANT권한을 포함해 모든 권한을 준다 모든 디비.모든 테이블에 대해서. (all privileges내에는 grant 권한은 없다)
GRANT select,delete ON *.* TO gyetol //선택과 삭제 권한만 주었다

GRANT all privileges on example.* to tester@'%' //모든 곳에서 tester라는 계정으로 접속가능 example에 대해 모든 권한을 준다
GRANT all privileges on example.* to tester@'127.0.0.1'IDENTIFIED BY '1234' //로컬에서만 tester 라는 계정으로 접속가능,example에 대해 모든 권한을 주었다. 비번은 1234이다

REVOKE all privileges ON example.* from tester@'%'; //권한을 줄땐 모든 권한을 주고, 뺏을땐 일부만 뺏을수 없다. 권한을 줄때 그 단위로 뺏을 수 있다

권한에서 Y로 되어있으면 모든권한이 있는것이고, N라고 되어있으면 모든권한이 있는 것은 아니기 때문에 디비를 열어서 (select * from db;를 보면 ) 특정table에 대해서만 권한이 있는지 확인한다.
GRANT ALL PRIVILEGES ON student.* TO student;// student계정에게 student디비의 모든테이블의 권한을 준다
데이터베이스 단위로 권한 주는 것은 할 줄 알아야 한다
create database student; // student db를 만든다


/* 계정 추가*/
CREATE user project IDENTIFIED BY '비번'; //관리자만 가능
/*추가된 계정에 권한 부여*/ 
GRANT ALL PRIVILEGES ON project.* TO project; //*.* 모든 디비.모든 테이블에 권한을 하면 안된다 //관리자만 가능
/* project계정이 사용할 project 데이터베이스 생성*/
CREATE DATABASE project;


collation-server=utf8_unicode_ci
skip-character-set-client-handshake //내가 쓰는 캐릭터셋으로 강제가능


SET PASSWORD FOR tester@'localhost' =PASSWORD('1234'); //로컬호스트에서 접속하는 테스터라는 계정의 비밀번호를 1234로 바꿔라 PASSWORD()안에 써야 한다. 해쉬때문에! 

mysqladmin -uroot -p create myproject //관리자 계정으로 디비만든다



1. 마리아디비 설치 및 path 설정( bin 디렉토리 등록)
2. my.ini 파일 설정
[mysqld]섹션에 
character-set-server=utf8
collation-server=utf8_unicode_ci
skip-character-set-client-handshake

3.root를 대신할 관리자 계정을 본인 이름과 동일한 이름으로 추가
4.새로 추가된 본인 이름의 관리자 계정으로 로그인
5. student 데이터베이스 내의 모든 테이블에 grant권한을 제외한 모든 권한을 가지는 student 계정추가
6. student 계정이 사용할 student 데이터베이스를 생성
7. student 계정으로 student 데이터베이스에 접속
8. 접속이 완료되면 student 데이터베이스를 삭제 및 다시 생성 
9. student 계정에 부여된 권한을 수거
10.교재 58페이지까지 복습