프로그램을 기준으로 데이터가 들어오면 input
데이터가 나가면 output
스트림 : 데이터의 흐르는 통로이자 메모리. 즉 무언가를 저장할 수 있음. 따라서 스트림 버퍼라는 말도 많이사용함.
버퍼링인 안된다? 플레이어에서 데이터를 꺼내서 재생이 끝났는데 버퍼를 뒤져보니 꺼낼 것이 없다. 즉 버퍼랑 데이터를 일시적으로 저장하는 공간. 대표적인 예시가 캐시.
데이터가 들어왔다 나왔다 할 때 실제로는 스트림에서 들어오고 스트림으로 내보내는 것이다.
스트림은 queue이다. deque이 아니므로 하나의 스트림에서 입출력을 모두 하는 것은 불가능하다.

바이트 단위 입출력 : InputStream, OutputStream (binary 파일 읽어들일때)
문자(Character : 2Byte) 단위 입출력 : Reader, Writer (text파일 읽어들일때)

파일을 delete한다고 바로 지워지는것이 아님

~로 부터 입력 '받는'
~에 출력 '하는'
밖에서 '어디'로 들어가는

메모리 상의 데이터는 파일 형태가 아님.

직렬화 : 메모리 상의 데이터를 파일처럼 만드는 것

ObjectOutputStream : 오브젝트에 저장하기위한 통로

OutputStream에서 꼭 flush() 를 명시적으로 하는 습관을 들여라. 애초에 flush()는 OutputStream에서 밖에 안됨

실제 프로젝트에서는 파일스트림을 처음에 한번 열어놓고 프로그램 내내 안닫고 서로서로 계속 사용함.